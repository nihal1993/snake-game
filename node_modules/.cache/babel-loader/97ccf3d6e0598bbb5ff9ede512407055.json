{"ast":null,"code":"var _jsxFileName = \"/Users/nihaljaimini/Desktop/my-app/src/App.js\";\nimport React, { Component } from 'react';\nimport Snake from './Snake';\nimport Food from './Food';\n\nconst getRandomCordinates = () => {\n  let min = 1;\n  let max = 98;\n  let x = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n  let y = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n  return [x, y];\n};\n\nconst startGame = () => {\n  clearInterval(this.moveSnake);\n  window.location.reload();\n};\n\nconst initialState = {\n  speed: 200,\n  food: getRandomCordinates(),\n  direction: 'RIGHT',\n  snakeDots: [[0, 0], [2, 0]],\n  scorecard: 'NONE',\n  myscore: 0\n};\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n\n    this.onKeyDown = e => {\n      e = e || window.event;\n\n      switch (e.keyCode) {\n        case 37:\n          this.setState({\n            direction: 'LEFT'\n          });\n          break;\n\n        case 38:\n          this.setState({\n            direction: 'TOP'\n          });\n          break;\n\n        case 39:\n          this.setState({\n            direction: 'RIGHT'\n          });\n          break;\n\n        case 40:\n          this.setState({\n            direction: 'DOWN'\n          });\n          break;\n      }\n    };\n\n    this.moveSnake = () => {\n      let dots = [...this.state.snakeDots];\n      let head = dots[dots.length - 1];\n\n      switch (this.state.direction) {\n        case 'RIGHT':\n          head = [head[0] + 2, head[1]];\n          break;\n\n        case 'LEFT':\n          head = [head[0] - 2, head[1]];\n          break;\n\n        case 'TOP':\n          head = [head[0], head[1] - 2];\n          break;\n\n        case 'DOWN':\n          head = [head[0], head[1] + 2];\n          break;\n      }\n\n      dots.push(head);\n      dots.shift();\n      this.setState({\n        snakeDots: dots\n      });\n    };\n  }\n\n  componentDidMount() {\n    setInterval(this.moveSnake, this.state.speed);\n    document.onkeydown = this.onKeyDown;\n  }\n\n  componentDidUpdate() {\n    this.checkBorder();\n    this.snakeCollapsed();\n    this.snakeEatingFood();\n  }\n\n  checkBorder() {\n    let border = this.state.snakeDots[this.state.snakeDots.length - 1];\n\n    if (border[0] > 100 || border[1] > 100 || border[0] < 0 || border[1] < 0) {\n      this.gameOver();\n    }\n  }\n\n  gameOver() {\n    this.setState(initialState);\n    this.setState({\n      scorecard: 'show',\n      myscore: this.state.snakeDots.length\n    });\n  }\n\n  snakeCollapsed() {\n    let snake = [...this.state.snakeDots];\n    let head = snake[snake.length - 1];\n    snake.pop();\n    snake.forEach(dots => {\n      if (dots[0] == head[0] && dots[1] == head[1]) {\n        this.gameOver();\n      }\n    });\n  }\n\n  snakeEatingFood() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n    let food = this.state.food;\n\n    if (food[0] = head[0] && food[1] == head[1]) {\n      this.setState({\n        food: getRandomCordinates()\n      });\n      this.enlargeSnake();\n      this.increaseSpeed();\n    }\n  }\n\n  enlargeSnake() {\n    let newSnake = [...this.state.snakeDots];\n    newSnake.unshift([]);\n    this.setState({\n      snakeDots: newSnake\n    });\n  }\n\n  increaseSpeed() {\n    if (this.state.speed > 10) {\n      this.setState({\n        speed: this.state.speed - 10\n      });\n    }\n  }\n\n  render() {\n    const score = this.state.scorecard;\n    return React.createElement(\"div\", {\n      className: \"game-area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, this.state.scorecard == 'show' ? React.createElement(\"div\", {\n      className: \"show-big\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Game Over ..\", React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \" your score is \", this.state.myscore), React.createElement(\"button\", {\n      className: \"buttonClass\",\n      onClick: startGame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"Play again\")) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(Snake, {\n      snakeDots: this.state.snakeDots,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), React.createElement(Food, {\n      dot: this.state.food,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/nihaljaimini/Desktop/my-app/src/App.js"],"names":["React","Component","Snake","Food","getRandomCordinates","min","max","x","Math","floor","random","y","startGame","clearInterval","moveSnake","window","location","reload","initialState","speed","food","direction","snakeDots","scorecard","myscore","App","state","onKeyDown","e","event","keyCode","setState","dots","head","length","push","shift","componentDidMount","setInterval","document","onkeydown","componentDidUpdate","checkBorder","snakeCollapsed","snakeEatingFood","border","gameOver","snake","pop","forEach","enlargeSnake","increaseSpeed","newSnake","unshift","render","score"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Snake from './Snake';\nimport Food from './Food';\n\n\n\nconst getRandomCordinates = () => {\n      let min = 1 ;\n      let max = 98 ;\n      let x = Math.floor((Math.random()*(max-min+1)+min)/2)*2;\n      let y =  Math.floor((Math.random()*(max-min+1)+min)/2)*2;\n      \n      return [x,y]\n  }\n  \n\n const startGame = () => {\n   clearInterval(this.moveSnake);\n    window.location.reload();\n  } \n\nconst initialState  = {\n     speed:200,\n     food: getRandomCordinates(),\n     direction:'RIGHT',\n     snakeDots: [\n      [0,0],\n      [2,0]\n     ],\n     scorecard:'NONE',\n     myscore:0\n}  \n\nclass App extends Component {\n\n  \n  state = initialState;\n\n  componentDidMount() {\n    setInterval(this.moveSnake,this.state.speed);\n    document.onkeydown = this.onKeyDown;\n  }\n\n  componentDidUpdate(){\n    this.checkBorder();\n    this.snakeCollapsed();\n    this.snakeEatingFood();\n    \n  }\n\n  onKeyDown = (e) => {\n    e = e || window.event;\n    switch(e.keyCode){\n      case 37:\n      this.setState({direction:'LEFT'});\n      break;\n      case 38:\n      this.setState({direction:'TOP'});\n      break;\n      case 39:\n      this.setState({direction:'RIGHT'});\n      break;\n      case 40:\n      this.setState({direction:'DOWN'});\n      break;\n\n    }\n  }\n\n  moveSnake = () => {\n    let dots = [...this.state.snakeDots];\n    let head = dots[dots.length - 1];\n\n    switch(this.state.direction){\n      case 'RIGHT':\n      head = [head[0] + 2,head[1]];\n      break;\n      case 'LEFT':\n      head = [head[0] - 2,head[1]];\n      break;\n      case 'TOP':\n      head = [head[0],head[1] -2 ];\n      break;\n      case 'DOWN':\n      head = [head[0],head[1] + 2];\n      break;\n    }\n    dots.push(head);\n    dots.shift();\n    this.setState({\n      snakeDots:dots\n    })\n\n  }\n\n  checkBorder(){\n    let border = this.state.snakeDots[this.state.snakeDots.length - 1];\n    if(border[0]>100|| border[1]>100 || border[0]< 0 || border[1] < 0){\n      this.gameOver();\n    }\n\n  }\n\n  gameOver(){\n    this.setState(initialState);\n    this.setState({\n      scorecard:'show',\n      myscore:this.state.snakeDots.length\n    })\n    \n  }\n\n  snakeCollapsed(){\n    let snake = [...this.state.snakeDots];\n    let head  = snake[snake.length - 1];\n    snake.pop();\n    snake.forEach(dots => {\n        if(dots[0] == head[0] && dots[1] == head[1])\n        {\n          this.gameOver();\n        }\n    })\n  }\n\n  snakeEatingFood(){\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n    let food =  this.state.food;\n    if(food[0] = head[0] && food[1] == head[1]){\n      this.setState({\n        food: getRandomCordinates()\n      })\n\n      this.enlargeSnake();\n      this.increaseSpeed();\n    }\n\n  }\n\n  enlargeSnake() {\n    let newSnake = [...this.state.snakeDots];\n    newSnake.unshift([])\n    this.setState({\n      snakeDots: newSnake\n    })\n  }\n\n  increaseSpeed() {\n    if (this.state.speed > 10) {\n      this.setState({\n        speed: this.state.speed - 10\n      })\n    }\n  }\n\n \n\n  render() {\n      const score = this.state.scorecard;\n\n        return(\n            <div className=\"game-area\">\n                {\n                  this.state.scorecard == 'show'? \n                    <div className=\"show-big\">\n                          Game Over ..\n                          <p> your score is {this.state.myscore}</p>\n                          <button className=\"buttonClass\" onClick={startGame}>\n                            Play again\n                          </button>\n                                                   \n                    </div>\n                    : \n                    <div>\n                    <Snake snakeDots={this.state.snakeDots} />\n                    <Food dot={this.state.food} />\n                    </div>\n                }\n               \n            </div>\n          \n      );\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}